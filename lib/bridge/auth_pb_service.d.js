"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthClient = exports.Auth = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// package: bridge
// file: src/bridge/auth.proto
var Auth = function Auth() {
  _classCallCheck(this, Auth);
};

exports.Auth = Auth;

_defineProperty(Auth, "serviceName", void 0);

_defineProperty(Auth, "Descriptor", void 0);

_defineProperty(Auth, "ByUsernameAndPassword", void 0);

var AuthClient = function AuthClient() {
  _classCallCheck(this, AuthClient);

  _defineProperty(this, "serviceHost", void 0);
};

exports.AuthClient = AuthClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9icmlkZ2UvYXV0aF9wYl9zZXJ2aWNlLmQudHMiXSwibmFtZXMiOlsiQXV0aCIsIkF1dGhDbGllbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtJQXlCYUEsSTs7Ozs7O2dCQUFBQSxJOztnQkFBQUEsSTs7Z0JBQUFBLEk7O0lBa0NBQyxVIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZTogYnJpZGdlXG4vLyBmaWxlOiBzcmMvYnJpZGdlL2F1dGgucHJvdG9cblxuaW1wb3J0ICogYXMgc3JjX2JyaWRnZV9hdXRoX3BiIGZyb20gXCIuLi8uLi9zcmMvYnJpZGdlL2F1dGhfcGJcIjtcbmltcG9ydCAqIGFzIGdvb2dsZV9wcm90b2J1Zl9hcGlfcGIgZnJvbSBcImdvb2dsZS1wcm90b2J1Zi9nb29nbGUvcHJvdG9idWYvYXBpX3BiXCI7XG5pbXBvcnQgKiBhcyBnb29nbGVfcHJvdG9idWZfZW1wdHlfcGIgZnJvbSBcImdvb2dsZS1wcm90b2J1Zi9nb29nbGUvcHJvdG9idWYvZW1wdHlfcGJcIjtcbmltcG9ydCB7Z3JwY30gZnJvbSBcIkBpbXByb2JhYmxlLWVuZy9ncnBjLXdlYlwiO1xuXG50eXBlIEF1dGhEZXNjcmlwdG9yID0ge1xuICByZWFkb25seSBtZXRob2ROYW1lOiBzdHJpbmc7XG4gIHJlYWRvbmx5IHNlcnZpY2U6IHR5cGVvZiBBdXRoO1xuICByZWFkb25seSByZXF1ZXN0U3RyZWFtOiBmYWxzZTtcbiAgcmVhZG9ubHkgcmVzcG9uc2VTdHJlYW06IGZhbHNlO1xuICByZWFkb25seSByZXF1ZXN0VHlwZTogdHlwZW9mIGdvb2dsZV9wcm90b2J1Zl9lbXB0eV9wYi5FbXB0eTtcbiAgcmVhZG9ubHkgcmVzcG9uc2VUeXBlOiB0eXBlb2YgZ29vZ2xlX3Byb3RvYnVmX2FwaV9wYi5BcGk7XG59O1xuXG50eXBlIEF1dGhCeVVzZXJuYW1lQW5kUGFzc3dvcmQgPSB7XG4gIHJlYWRvbmx5IG1ldGhvZE5hbWU6IHN0cmluZztcbiAgcmVhZG9ubHkgc2VydmljZTogdHlwZW9mIEF1dGg7XG4gIHJlYWRvbmx5IHJlcXVlc3RTdHJlYW06IGZhbHNlO1xuICByZWFkb25seSByZXNwb25zZVN0cmVhbTogZmFsc2U7XG4gIHJlYWRvbmx5IHJlcXVlc3RUeXBlOiB0eXBlb2Ygc3JjX2JyaWRnZV9hdXRoX3BiLlVzZXJuYW1lQW5kUGFzc3dvcmQ7XG4gIHJlYWRvbmx5IHJlc3BvbnNlVHlwZTogdHlwZW9mIGdvb2dsZV9wcm90b2J1Zl9hcGlfcGIuQXBpO1xufTtcblxuZXhwb3J0IGNsYXNzIEF1dGgge1xuICBzdGF0aWMgcmVhZG9ubHkgc2VydmljZU5hbWU6IHN0cmluZztcbiAgc3RhdGljIHJlYWRvbmx5IERlc2NyaXB0b3I6IEF1dGhEZXNjcmlwdG9yO1xuICBzdGF0aWMgcmVhZG9ubHkgQnlVc2VybmFtZUFuZFBhc3N3b3JkOiBBdXRoQnlVc2VybmFtZUFuZFBhc3N3b3JkO1xufVxuXG5leHBvcnQgdHlwZSBTZXJ2aWNlRXJyb3IgPSB7IG1lc3NhZ2U6IHN0cmluZywgY29kZTogbnVtYmVyOyBtZXRhZGF0YTogZ3JwYy5NZXRhZGF0YSB9XG5leHBvcnQgdHlwZSBTdGF0dXMgPSB7IGRldGFpbHM6IHN0cmluZywgY29kZTogbnVtYmVyOyBtZXRhZGF0YTogZ3JwYy5NZXRhZGF0YSB9XG5cbmludGVyZmFjZSBVbmFyeVJlc3BvbnNlIHtcbiAgY2FuY2VsKCk6IHZvaWQ7XG59XG5pbnRlcmZhY2UgUmVzcG9uc2VTdHJlYW08VD4ge1xuICBjYW5jZWwoKTogdm9pZDtcbiAgb24odHlwZTogJ2RhdGEnLCBoYW5kbGVyOiAobWVzc2FnZTogVCkgPT4gdm9pZCk6IFJlc3BvbnNlU3RyZWFtPFQ+O1xuICBvbih0eXBlOiAnZW5kJywgaGFuZGxlcjogKHN0YXR1cz86IFN0YXR1cykgPT4gdm9pZCk6IFJlc3BvbnNlU3RyZWFtPFQ+O1xuICBvbih0eXBlOiAnc3RhdHVzJywgaGFuZGxlcjogKHN0YXR1czogU3RhdHVzKSA9PiB2b2lkKTogUmVzcG9uc2VTdHJlYW08VD47XG59XG5pbnRlcmZhY2UgUmVxdWVzdFN0cmVhbTxUPiB7XG4gIHdyaXRlKG1lc3NhZ2U6IFQpOiBSZXF1ZXN0U3RyZWFtPFQ+O1xuICBlbmQoKTogdm9pZDtcbiAgY2FuY2VsKCk6IHZvaWQ7XG4gIG9uKHR5cGU6ICdlbmQnLCBoYW5kbGVyOiAoc3RhdHVzPzogU3RhdHVzKSA9PiB2b2lkKTogUmVxdWVzdFN0cmVhbTxUPjtcbiAgb24odHlwZTogJ3N0YXR1cycsIGhhbmRsZXI6IChzdGF0dXM6IFN0YXR1cykgPT4gdm9pZCk6IFJlcXVlc3RTdHJlYW08VD47XG59XG5pbnRlcmZhY2UgQmlkaXJlY3Rpb25hbFN0cmVhbTxSZXFULCBSZXNUPiB7XG4gIHdyaXRlKG1lc3NhZ2U6IFJlcVQpOiBCaWRpcmVjdGlvbmFsU3RyZWFtPFJlcVQsIFJlc1Q+O1xuICBlbmQoKTogdm9pZDtcbiAgY2FuY2VsKCk6IHZvaWQ7XG4gIG9uKHR5cGU6ICdkYXRhJywgaGFuZGxlcjogKG1lc3NhZ2U6IFJlc1QpID0+IHZvaWQpOiBCaWRpcmVjdGlvbmFsU3RyZWFtPFJlcVQsIFJlc1Q+O1xuICBvbih0eXBlOiAnZW5kJywgaGFuZGxlcjogKHN0YXR1cz86IFN0YXR1cykgPT4gdm9pZCk6IEJpZGlyZWN0aW9uYWxTdHJlYW08UmVxVCwgUmVzVD47XG4gIG9uKHR5cGU6ICdzdGF0dXMnLCBoYW5kbGVyOiAoc3RhdHVzOiBTdGF0dXMpID0+IHZvaWQpOiBCaWRpcmVjdGlvbmFsU3RyZWFtPFJlcVQsIFJlc1Q+O1xufVxuXG5leHBvcnQgY2xhc3MgQXV0aENsaWVudCB7XG4gIHJlYWRvbmx5IHNlcnZpY2VIb3N0OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Ioc2VydmljZUhvc3Q6IHN0cmluZywgb3B0aW9ucz86IGdycGMuUnBjT3B0aW9ucyk7XG4gIGRlc2NyaXB0b3IoXG4gICAgcmVxdWVzdE1lc3NhZ2U6IGdvb2dsZV9wcm90b2J1Zl9lbXB0eV9wYi5FbXB0eSxcbiAgICBtZXRhZGF0YTogZ3JwYy5NZXRhZGF0YSxcbiAgICBjYWxsYmFjazogKGVycm9yOiBTZXJ2aWNlRXJyb3J8bnVsbCwgcmVzcG9uc2VNZXNzYWdlOiBnb29nbGVfcHJvdG9idWZfYXBpX3BiLkFwaXxudWxsKSA9PiB2b2lkXG4gICk6IFVuYXJ5UmVzcG9uc2U7XG4gIGRlc2NyaXB0b3IoXG4gICAgcmVxdWVzdE1lc3NhZ2U6IGdvb2dsZV9wcm90b2J1Zl9lbXB0eV9wYi5FbXB0eSxcbiAgICBjYWxsYmFjazogKGVycm9yOiBTZXJ2aWNlRXJyb3J8bnVsbCwgcmVzcG9uc2VNZXNzYWdlOiBnb29nbGVfcHJvdG9idWZfYXBpX3BiLkFwaXxudWxsKSA9PiB2b2lkXG4gICk6IFVuYXJ5UmVzcG9uc2U7XG4gIGJ5VXNlcm5hbWVBbmRQYXNzd29yZChcbiAgICByZXF1ZXN0TWVzc2FnZTogc3JjX2JyaWRnZV9hdXRoX3BiLlVzZXJuYW1lQW5kUGFzc3dvcmQsXG4gICAgbWV0YWRhdGE6IGdycGMuTWV0YWRhdGEsXG4gICAgY2FsbGJhY2s6IChlcnJvcjogU2VydmljZUVycm9yfG51bGwsIHJlc3BvbnNlTWVzc2FnZTogZ29vZ2xlX3Byb3RvYnVmX2FwaV9wYi5BcGl8bnVsbCkgPT4gdm9pZFxuICApOiBVbmFyeVJlc3BvbnNlO1xuICBieVVzZXJuYW1lQW5kUGFzc3dvcmQoXG4gICAgcmVxdWVzdE1lc3NhZ2U6IHNyY19icmlkZ2VfYXV0aF9wYi5Vc2VybmFtZUFuZFBhc3N3b3JkLFxuICAgIGNhbGxiYWNrOiAoZXJyb3I6IFNlcnZpY2VFcnJvcnxudWxsLCByZXNwb25zZU1lc3NhZ2U6IGdvb2dsZV9wcm90b2J1Zl9hcGlfcGIuQXBpfG51bGwpID0+IHZvaWRcbiAgKTogVW5hcnlSZXNwb25zZTtcbn1cblxuIl19